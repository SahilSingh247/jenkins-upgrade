apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: jenkins-new
  name: ingress-alb
  annotations:
    alb.ingress.kubernetes.io/scheme: "internal"
    alb.ingress.kubernetes.io/target-type: "ip"
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80,"HTTPS": 443}]'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-south-1:091860164623:certificate/ca945958-2727-4bbe-aee0-d309849353f5
    alb.ingress.kubernetes.io/healthcheck-path: "/login"    
    alb.ingress.kubernetes.io/success-codes: "200"
    alb.ingress.kubernetes.io/ssl-policy: ELBSecurityPolicy-FS-1-2-2019-08
    alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=600, routing.http.drop_invalid_header_fields.enabled=true
    alb.ingress.kubernetes.io/load-balancer-name: jenkins-upgrade-stage-alb
    alb.ingress.kubernetes.io/subnets: subnet-0f0e7079d150571af,subnet-06bb67e02c9b04de0
    alb.ingress.kubernetes.io/manage-backend-security-group-rules: "true"
    alb.ingress.kubernetes.io/security-groups: sg-01c5dcac2240492bd
    alb.ingress.kubernetes.io/group.name: 'jenkins-ingress-alb'
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
spec:
  ingressClassName: alb
  rules:
    - http:
        paths:
        - path: "/"
          pathType: Prefix
          backend:
            service:
              name: ssl-redirect
              port:
                name: 'use-annotation'
    - host: "jenkins-upgrade.api-tenet.com"
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: jenkins-upgrade
                port: 
                  number: 8080
   